{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","search","setSearch","country","capital","region","subregion","inputs","setInputs","useEffect","fetch","then","json","parsejson","map","latlng","common","name","join","console","log","catch","e","countryResult","filter","capitalResult","regionResult","subregionResult","input","item","toLowerCase","match","handleChange","target","value","className","type","onChange","placeholder","toFixed","ReactDOM","render","document","getElementById"],"mappings":"+dA8KeA,MA3Kf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGeJ,mBAAS,CACnCK,QAAS,GACTC,QAAS,GACTC,OAAQ,GACRC,UAAW,KAPA,mBAGNC,EAHM,KAGEC,EAHF,KAUbC,qBAAU,WAGRC,MADE,6EAECC,MAAK,SAAAZ,GAAI,OAAIA,EAAKa,UAClBD,MAAK,SAAAC,GACJ,IAAMC,EAAYD,EAAKE,KACrB,gBAAGV,EAAH,EAAGA,QAASW,EAAZ,EAAYA,OAAgBC,EAA5B,EAAoBC,KAAQD,OAAUX,EAAtC,EAAsCA,OAAQC,EAA9C,EAA8CA,UAA9C,MAA+D,CAC7DF,QAASA,EAAQc,KAAK,KACtBH,SACAC,SACAX,SACAC,gBAGJa,QAAQC,IAAIP,GACZb,EAAQa,GACRX,EAAUW,MAEXQ,OAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,QACzB,IAEHb,qBAAU,WACRU,QAAQC,IAAIb,GACZ,IAAMgB,EAAgBC,EAAOjB,EAAOJ,QAASJ,EAAM,UAC7C0B,EAAgBD,EAAOjB,EAAOH,QAASmB,EAAe,WACtDG,EAAeF,EAAOjB,EAAOF,OAAQoB,EAAe,UACpDE,EAAkBH,EAAOjB,EAAOD,UAAWoB,EAAc,aAC/DP,QAAQC,IAAI,CACVG,gBACAE,gBACAC,eACAC,oBAEFzB,EAAUyB,KACT,CAACpB,EAAOJ,QAASI,EAAOH,QAASG,EAAOF,OAAQE,EAAOD,YAE1D,IAAMkB,EAAS,SAACI,EAAO7B,EAAMkB,GAC3B,MAAa,IAATW,EACK7B,EAEKA,EAAKyB,QAAO,SAAAK,GACxB,GAAIA,EAAKZ,GAAMa,cAAcC,MAAMH,GACjC,OAAOC,MAyDPG,EAAe,SAAAV,GACnBd,E,yVAAU,CAAD,GAAMD,EAAN,eAAee,EAAEW,OAAOhB,KAAOK,EAAEW,OAAOC,MAAMJ,kBAGzD,OACE,yBAAKK,UAAU,WACb,4BAAQA,UAAU,UAChB,kDAEF,yBAAKA,UAAU,iBACb,2BACEC,KAAK,OACLnB,KAAK,UACLoB,SAAUL,EACVE,MAAO3B,EAAOJ,QACdmC,YAAY,sBAEd,2BACEF,KAAK,OACLnB,KAAK,UACLoB,SAAUL,EACVE,MAAO3B,EAAOH,QACdkC,YAAY,sBAEd,2BACEF,KAAK,OACLnB,KAAK,SACLoB,SAAUL,EACVE,MAAO3B,EAAOF,OACdiC,YAAY,qBAEd,2BACEF,KAAK,OACLnB,KAAK,YACLoB,SAAUL,EACVE,MAAO3B,EAAOD,UACdgC,YAAY,yBAGhB,yBAAKH,UAAU,SACb,yBAAKA,UAAU,SAAf,WACA,yBAAKA,UAAU,SAAf,WACA,yBAAKA,UAAU,SAAf,UACA,yBAAKA,UAAU,SAAf,aACA,yBAAKA,UAAU,SAAf,YACA,yBAAKA,UAAU,SAAf,cAEDlC,EAAOa,KAAI,SAAAf,GAAI,OACd,yBAAKoC,UAAU,SACb,yBAAKA,UAAU,SAASpC,EAAKiB,QAC7B,yBAAKmB,UAAU,SAASpC,EAAKK,SAC7B,yBAAK+B,UAAU,SAASpC,EAAKM,QAC7B,yBAAK8B,UAAU,SAASpC,EAAKO,WAC7B,yBAAK6B,UAAU,SAASpC,EAAKgB,OAAO,GAAGwB,QAAQ,IAC/C,yBAAKJ,UAAU,SAASpC,EAAKgB,OAAO,GAAGwB,QAAQ,UClKzDC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.700f4422.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState([]);\n  const [inputs, setInputs] = useState({\n    country: \"\",\n    capital: \"\",\n    region: \"\",\n    subregion: \"\"\n  });\n\n  useEffect(() => {\n    const url =\n      \"https://raw.githubusercontent.com/mledoze/countries/master/countries.json\";\n    fetch(url)\n      .then(data => data.json())\n      .then(json => {\n        const parsejson = json.map(\n          ({ capital, latlng, name: { common }, region, subregion }) => ({\n            capital: capital.join(\" \"),\n            latlng,\n            common,\n            region,\n            subregion\n          })\n        );\n        console.log(parsejson);\n        setData(parsejson);\n        setSearch(parsejson);\n      })\n      .catch(e => console.log(e));\n  }, []);\n\n  useEffect(() => {\n    console.log(inputs);\n    const countryResult = filter(inputs.country, data, \"common\");\n    const capitalResult = filter(inputs.capital, countryResult, \"capital\");\n    const regionResult = filter(inputs.region, capitalResult, \"region\");\n    const subregionResult = filter(inputs.subregion, regionResult, \"subregion\");\n    console.log({\n      countryResult,\n      capitalResult,\n      regionResult,\n      subregionResult\n    });\n    setSearch(subregionResult);\n  }, [inputs.country, inputs.capital, inputs.region, inputs.subregion]);\n\n  const filter = (input, data, name) => {\n    if (input == \"\") {\n      return data;\n    }\n    const tdata = data.filter(item => {\n      if (item[name].toLowerCase().match(input)) {\n        return item;\n      }\n    });\n    return tdata;\n  };\n\n  // const SearchByCountry = () => {\n  //   // let dataToSearch = country.length > inputs.country ? search : data;\n  //   if (inputs.country == \"\") {\n  //     return data;\n  //   }\n  //   const tdata = data.filter(item => {\n  //     if (item.common.toLowerCase().match(inputs.country)) {\n  //       return item;\n  //     }\n  //   });\n  //   return tdata;\n  // };\n  // const SearchByCapital = tdata => {\n  //   if (inputs.capital == \"\") {\n  //     return tdata;\n  //   }\n  //   const data = tdata.filter(item => {\n  //     if (\n  //       item.capital\n  //         .join(\" \")\n  //         .toLowerCase()\n  //         .match(inputs.capital)\n  //     ) {\n  //       return item;\n  //     }\n  //   });\n  //   return data;\n  // };\n  // const SearchByRegion = tdata => {\n  //   if (inputs.region == \"\") {\n  //     return tdata;\n  //   }\n  //   const data = tdata.filter(item => {\n  //     if (item.region.toLowerCase().match(inputs.region)) {\n  //       return item;\n  //     }\n  //   });\n  //   return data;\n  // };\n  // const SearchBySubregion = tdata => {\n  //   if (inputs.subregion == \"\") {\n  //     return tdata;\n  //   }\n  //   const data = tdata.filter(item => {\n  //     if (item.subregion.toLowerCase().match(inputs.subregion)) {\n  //       return item;\n  //     }\n  //   });\n  //   return data;\n  // };\n\n  const handleChange = e => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value.toLowerCase() });\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <header className=\"header\">\n        <h1>React MultiSearch</h1>\n      </header>\n      <div className=\"table inputss\">\n        <input\n          type=\"text\"\n          name=\"country\"\n          onChange={handleChange}\n          value={inputs.country}\n          placeholder=\"filter by country\"\n        />\n        <input\n          type=\"text\"\n          name=\"capital\"\n          onChange={handleChange}\n          value={inputs.capital}\n          placeholder=\"filter by capital\"\n        />\n        <input\n          type=\"text\"\n          name=\"region\"\n          onChange={handleChange}\n          value={inputs.region}\n          placeholder=\"filter by region\"\n        />\n        <input\n          type=\"text\"\n          name=\"subregion\"\n          onChange={handleChange}\n          value={inputs.subregion}\n          placeholder=\"filter by subregion\"\n        />\n      </div>\n      <div className=\"table\">\n        <div className=\"label\">Country</div>\n        <div className=\"label\">Capital</div>\n        <div className=\"label\">Region</div>\n        <div className=\"label\">SubRegion</div>\n        <div className=\"label\">Latitude</div>\n        <div className=\"label\">Longitude</div>\n      </div>\n      {search.map(data => (\n        <div className=\"table\">\n          <div className=\"value\">{data.common}</div>\n          <div className=\"value\">{data.capital}</div>\n          <div className=\"value\">{data.region}</div>\n          <div className=\"value\">{data.subregion}</div>\n          <div className=\"value\">{data.latlng[0].toFixed(2)}</div>\n          <div className=\"value\">{data.latlng[1].toFixed(2)}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}